{"version":3,"sources":["assets/react-logo.svg","serviceWorker.js","constants/routes.js","components/Firebase/context.js","config.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/PostInput.js","components/Home/DisplayPost.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/index.js","components/Page404/index.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","configuration","apiKeyFirebase","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","config","apiKey","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doUpdateUser","username","updateProfile","displayName","doGetUser","user","uid","db","ref","concat","users","posts","post","postId","app","initializeApp","database","_ref","className","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react","href","process","ROUTES","alt","src","logo","id","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","to","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","preventDefault","_this$state","then","set","objectSpread","catch","onChange","defineProperty","target","name","_this$state2","isInvalid","nameValidation","length","passwordValidation","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignIn","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","PostInput","handleSubmit","postRef","postText","currentPost","handleChange","trim","DisplayPost","getPosts","on","snapshot","listPosts","val","newState","remove","console","log","map","editePost","removePost","reverse","Home_PostInput","Home_DisplayPost","PasswordChangeForm","PasswordChange","UsersPage","loading","usersObject","usersList","keys","off","Users_UserList","UserList","Page404","BrowserRouter","basename","components_Navigation","Switch","Route","exact","path","component","SignInPage","HomePage","AccountPage","ReactDOM","render","context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ccc5804.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.8e26f220.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const USERS = '/users';\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase}/>}\n  </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;","const configuration = {\n  apiKeyFirebase : \"AIzaSyBhCJ7JCwI_h0EVVIeqQFUausr5bSjOIog\",\n  authDomain: \"reactibook-2018.firebaseapp.com\",\n  databaseURL: \"https://reactibook-2018.firebaseio.com\",\n  projectId: \"reactibook-2018\",\n  storageBucket: \"reactibook-2018.appspot.com\",\n  messagingSenderId: \"733511856277\"\n}\n\nexport default configuration;","  import configuration from \"../../config\";\n  import app from \"firebase/app\";\n  import \"firebase/auth\";\n  import \"firebase/database\";\n\n  // Initialize Firebase\n  const config = {\n    apiKey: configuration.apiKeyFirebase,\n    authDomain: configuration.authDomain,\n    databaseURL: configuration.databaseURL,\n    projectId: configuration.projectId,\n    storageBucket: configuration.storageBucket,\n    messagingSenderId: configuration.messagingSenderId\n  };\n\n  class Firebase {\n    constructor(){\n      app.initializeApp(config);\n\n      this.auth = app.auth();\n      this.db = app.database();\n    }\n\n    // AUTH FUNCTIONS\n\n    doCreateUserWithEmailAndPassword = (email, password) => \n      this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n      this.auth.signInWithEmailAndPassword(email, password);\n    \n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    doUpdateUser = username => this.auth.currentUser.updateProfile({ displayName: username});\n\n    doGetUser = () => this.auth.currentUser;\n\n    // USER FUNCTIONS\n\n    user = uid => this.db.ref(`users/${uid}`);\n\n    users = () => this.db.ref(\"users\");\n\n    // POST FUNCTIONS\n\n    posts = () => this.db.ref(\"posts\");\n\n    post = postId => this.db.ref(`/posts/${postId}`);\n    \n   }\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from \"./context\";\nimport Firebase from \"./firebase\";\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport { withFirebase } from \"../Firebase\";\n\nconst SignOutButton = ({ firebase }) => (\n  <button className=\"nav-button\" type=\"button\" onClick={firebase.doSignOut}>Cerrar sesión</button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        authUser: null\n      };\n    }\n  \n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n  \n    componentWillUnmount() {\n      this.listener();\n    }\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      )\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount(){\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n\n    componentWillUnmount(){\n      this.listener();\n    }\n\n    render() { \n      return (\n        <AuthUserContext.Consumer>\n          {authUser => condition(authUser) ? <Component {...this.props} /> : null }\n        </AuthUserContext.Consumer>\n      ); \n    }\n  }\n   \n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n \nexport default withAuthorization;","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport SignOutButton from \"../SignOut\";\nimport { AuthUserContext } from \"../Session\";\nimport logo from \"../../assets/react-logo.svg\";\n\nconst Navigation = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-background\">\n    <AuthUserContext.Consumer>\n      {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\n    </AuthUserContext.Consumer>\n  </nav>\n);\n\nconst NavigationAuth = () => (\n  <Fragment>\n    <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + ROUTES.HOME}>\n      <img alt=\"Reactibook Logo\" src={logo} id=\"logo-navbar\" />\n      ReactiBook\n    </a>\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span className=\"navbar-toggler-icon\" />\n    </button>\n\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link to={ROUTES.HOME} className=\"nav-link\">\n            Inicio\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to={ROUTES.ACCOUNT} className=\"nav-link\">\n            Mi cuenta\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to={ROUTES.USERS} className=\"nav-link\">\n            Usuarios\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <SignOutButton />\n        </li>\n      </ul>\n    </div>\n  </Fragment>\n);\n\nconst NavigationNonAuth = () => (\n  <Fragment>\n    <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + ROUTES.SIGN_IN}>\n      <img alt=\"Reactibook Logo\" src={logo} id=\"logo-navbar\" />\n      ReactiBook\n    </a>\n  </Fragment>\n);\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst SignUpPage = () => (\n  <main className=\"center container col-12 col-md-8\">\n    <h1>Crea una cuenta</h1>\n    <SignUpForm />\n  </main>\n);\n\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        return this.props.firebase.user(authUser.user.uid).set({ username, email, });\n      })\n      .then(()=>{\n        this.props.firebase.doUpdateUser(username);\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    const nameValidation = username !== \"\" && username.length < 2;\n\n    // const emailValidation = (email) => {\n    //   if (email !== \"\"){\n    //     const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    //     return re.test(email);\n    //   } else {\n    //     return true;\n    //   }\n    // }\n\n    const passwordValidation =\n      passwordTwo !== \"\" && passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Ingresa tu nombre completo\"\n          aria-label=\"Nombre Completo\"\n        />\n\n        {nameValidation ? <p className=\"error\">Ingresa tu nombre completo</p> : null}\n        \n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          placeholder=\"Ingresa tu correo electrónico\"\n          aria-label=\"Correo electrónico\"\n        />\n\n        {/* {emailValidation(email) ? null : <p className=\"error\">Verifica tu dirección de email</p>} */}\n\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Ingresa tu contraseña\"\n          aria-label=\"Contraseña\"\n        />\n\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirma tu contraseña\"\n          aria-label=\"Confirma contraseña\"\n        />\n\n        {passwordValidation ? <p className=\"error\">Las contraseñas no coindicen</p> : null}\n\n        <button disabled={isInvalid} type=\"submit\">\n          Registrar\n        </button>\n\n        {error && <p className=\"error\">{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    ¿Aún no tienes una cuenta? \n    <br/>\n    <Link to={ROUTES.SIGN_UP}>Crea una cuenta</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\n// const SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst PasswordForgetPage = () => (\n  <main className=\"center container col-12 col-md-8\">\n    <h1>Recupera tu contraseña</h1>\n    <p>Ingresa tu correo para recibir instrucciones</p>\n    <PasswordForgetForm />\n  </main>\n);\n\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n  \n  onSubmit = event => {\n    event.preventDefault();\n    const { email } = this.state;\n\n    this.props.firebase.doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      })\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() { \n    const { email, error } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          placeholder=\"Ingresa tu correo electrónico\"\n          aria-label=\"Correo electrónico\"\n        />\n        <button disabled={isInvalid} type=\"submit\">Recuperar</button>\n        {error && <p className=\"error\">{error.message}</p>}\n      </form>\n    );\n  }\n}\n \nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>¿Olvidaste tu contraseña?</Link>\n  </p>\n)\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgetLink } from \"../PasswordForget\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst SignInPage = () => (\n  <main className=\"center container col-12 col-md-8\">\n    <h1>Inicia sesión</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </main>\n);\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    this.props.firebase.doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      })\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  render() { \n    const { email, password, error } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          placeholder=\"Ingresa tu correo electrónico\"\n          aria-label=\"Correo electrónico\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Ingresa tu contraseña\"\n          aria-label=\"Contraseña\"\n        />\n        <button disabled={isInvalid} type=\"submit\">Entrar</button>\n        {error && <p className=\"error\">{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n \nexport default SignInPage;\n\nexport { SignInForm };\n","import React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nclass PostInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPost: \"\",\n      username: \"\",\n      user: {}\n    };\n  }\n\n  componentDidMount(){\n    const user = this.props.firebase.auth.currentUser\n    this.setState({user: user});\n  }\n\n  componentWillUnmount(){\n    this.setState({user: {}});\n  }\n\n  handleSubmit = event => {    \n    event.preventDefault();\n    const postRef = this.props.firebase.posts();\n    const post = {\n      postText: this.state.currentPost,\n      user: this.state.user.displayName|| this.state.user.email\n    };\n    postRef.push(post);\n    this.setState({\n      currentPost: \"\",\n      username: \"\"\n    });\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  render() {\n    const isInvalid = this.state.currentPost.trim() === '';\n\n    return (\n      <section className=\"col-8 offset-2 col-md-4 offset-md-1 justify-content-around post-entry\">\n        <form onSubmit={this.handleSubmit}>\n          <h3>¿Qué está pasando?</h3>\n          <textarea\n            type=\"text\"\n            name=\"currentPost\"\n            placeholder=\"Escribelo aquí\"\n            onChange={this.handleChange}\n            value={this.state.currentPost}\n          />\n          <button className=\"home-button\" disabled={isInvalid} type=\"submit\">Publicar</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default withFirebase(PostInput);\n","import React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nclass DisplayPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      user: {}\n    };\n  }\n\n  getPosts = () => {\n    const postRef = this.props.firebase.posts();\n    postRef.on(\"value\", snapshot => {\n      let listPosts = snapshot.val();\n      let newState = [];\n      for (let post in listPosts) {\n        newState.push({\n          id: post,\n          postText: listPosts[post].postText,\n          user: listPosts[post].user\n        });\n      }\n      this.setState({\n        posts: newState\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.setState({ user: this.props.firebase.auth.currentUser });\n    this.getPosts();\n  }\n\n  componentWillUnmount() {\n    this.setState({ user: {} });\n  }\n\n  removePost(postId) {\n    const postRef = this.props.firebase.post(postId);\n    postRef.remove();\n  }\n\n  editePost(postId) {\n    console.log(\"Voy a editar el post con el ID: \" + postId);\n  }\n\n  render() {\n    return (\n      <section className=\"col-10 offset-1 col-md-6 offset-md-0\">\n        <div className=\"display-posts\">\n          <ul>\n            {this.state.posts\n              .map(post => {\n                // console.log(post);\n\n                return (\n                  <li key={post.id}>\n                    <p className=\"text-color\">Publicado por: {post.user}</p>\n                    <p className=\"bolder\">{post.postText}</p>\n                    <hr />\n                    {post.user ===\n                    (this.state.user.displayName || this.state.user.email) ? (\n                      <div className=\"row\">\n                        <button\n                          className=\"button-post\"\n                          onClick={() => this.editePost(post.id)}\n                        >\n                          Editar\n                        </button>\n                        <button\n                          className=\"button-post\"\n                          onClick={() => this.removePost(post.id)}\n                        >\n                          Eliminar\n                        </button>\n                      </div>\n                    ) : null}\n                  </li>\n                );\n              })\n              .reverse()}\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default withFirebase(DisplayPost);\n","import React from 'react';\n\nimport { withAuthorization } from \"../Session\";\nimport PostInput from \"./PostInput\";\nimport DisplayPost from \"./DisplayPost\";\n\nconst HomePage = () => {\n  return(\n  <main className=\"home row\">\n    <PostInput />\n    {/* TO DO: Resolve warning with session change */}\n    <DisplayPost />\n  </main>\n  )\n}\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { passwordOne } = this.state;\n\n    this.props.firebase.doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordTwo === '' || passwordOne !== passwordTwo;\n\n    const passwordValidation =\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Ingresa tu contraseña\"\n          aria-label=\"Contraseña\"\n        />\n\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirma tu contraseña\"\n          aria-label=\"Confirma contraseña\"\n        />\n\n        {passwordValidation ? <p className=\"error\">Las contraseñas no coindicen</p> : null}\n\n        <button disabled={isInvalid} type=\"submit\">\n          Cambiar contraseña\n        </button>\n\n        {error && <p className=\"error\">{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React from \"react\";\n\nimport { AuthUserContext, withAuthorization } from \"../Session\";\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"center container col-12 col-md-8\">\n        <h1>Tu cuenta:</h1>\n        <p>Username: {authUser.displayName} </p>\n        <p>Email: {authUser.email} </p>\n        <p> Recupera tu contraseña:</p>\n        <PasswordForgetForm />\n        <p>O cambia tu contraseña:</p>\n        <PasswordChangeForm />\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component, Fragment } from 'react';\n\nimport { withFirebase } from \"../Firebase\";\nimport { withAuthorization } from \"../Session\";\n\nclass UsersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: [],\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on(\"value\", snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() { \n    const { users, loading } = this.state;\n    return (\n      <main className=\"center container col-12 col-md-8\">\n        <h1>Usuarios de Reactibook</h1>\n        {loading && <div>Cargando ...</div>}\n\n        <UserList users={users} />\n      </main>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <Fragment>\n    {users.map(user => (\n      <div className=\"card\" key={user.uid}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\"><strong>Usuario:</strong> {user.username}</h5>\n          <p className=\"card-text\"><strong>ID:</strong> {user.uid}</p>\n          <p className=\"card-text\"><strong>Email:</strong> {user.email}</p>\n        </div>\n      </div>\n    ))}\n  </Fragment>\n)\n\nconst condition = authUser => !!authUser;\n \nexport default withAuthorization(condition)(withFirebase(UsersPage));","import React from 'react';\n\nconst Page404 = () => (\n  <div>\n    <h1>Error 404</h1>\n  </div>\n);\n\nexport default Page404;","import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"../Navigation\";\nimport SignUpPage from \"../SignUp\";\nimport SignInPage from \"../SignIn\";\nimport PasswordForgetPage from \"../PasswordForget\";\nimport HomePage from \"../Home\";\nimport AccountPage from \"../Account\";\nimport UsersPage from \"../Users\";\nimport Page404 from \"../Page404\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../Session\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Fragment> \n\n      <Navigation />\n\n      <Switch>\n        <Route exact path = {ROUTES.SIGN_IN} component= {SignInPage} />\n        <Route exact path = {ROUTES.SIGN_UP} component= {SignUpPage} />\n        <Route exact path = {ROUTES.PASSWORD_FORGET} component= {PasswordForgetPage} />\n        <Route exact path = {ROUTES.HOME} component= {HomePage} />\n        <Route exact path = {ROUTES.ACCOUNT} component= {AccountPage} />\n        <Route exact path = {ROUTES.USERS} component= {UsersPage} />\n        <Route component={Page404} />\n      </Switch>\n\n    </Fragment>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","// Adding bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// eslint-disable-next-line\nimport $ from 'jquery';\n// eslint-disable-next-line\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}